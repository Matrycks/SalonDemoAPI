// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SalonAPI.Data;

namespace SalonAPI.Migrations
{
    [DbContext(typeof(SalonContext))]
    partial class SalonContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062");

            modelBuilder.Entity("SalonAPI.Data.CartDto", b =>
                {
                    b.Property<int>("CartId")
                        .ValueGeneratedOnAdd();

                    b.Property<double>("Total");

                    b.Property<int>("UserId");

                    b.HasKey("CartId");

                    b.ToTable("Carts");
                });

            modelBuilder.Entity("SalonAPI.Data.CartItemDto", b =>
                {
                    b.Property<int>("CartItemId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CartId");

                    b.Property<int>("ProductId");

                    b.Property<double>("ProductPrice");

                    b.Property<int>("Quantity");

                    b.Property<int>("UserId");

                    b.HasKey("CartItemId");

                    b.HasIndex("CartId");

                    b.ToTable("CartItems");
                });

            modelBuilder.Entity("SalonAPI.Data.ProductDto", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.Property<double>("Price");

                    b.HasKey("ProductId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            Description = "This conditioner is one of the best out! A quick tip for this product is to put on as much as possible and work it through the hair strands.",
                            Name = "Black Vanilla Conditioner",
                            Price = 24.0
                        },
                        new
                        {
                            ProductId = 2,
                            Description = "Add length and volume to your hair with the 20″ Jet Black Clip-In Hair Extensions. Quickly clip in a new look and style straight or with curls.",
                            Name = "Jet Black Clip-In Extensions",
                            Price = 81.0
                        },
                        new
                        {
                            ProductId = 3,
                            Description = "Brazilian Silky Straight Hair Extensions are true to length with the ability to color and style to perfection. With our wholesale straight bundles starting at just $29.99, it is hard to beat our quality and price. Maintenance is simple and silky straight is perfect for a bob or long lengths up to 32.",
                            Name = "Brazilian Straight Hair",
                            Price = 29.989999999999998
                        });
                });

            modelBuilder.Entity("SalonAPI.Data.UserDto", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email");

                    b.Property<string>("Firstname");

                    b.Property<string>("Lastname");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            Email = "janeeharris@hotmail.com",
                            Firstname = "Ashley",
                            Lastname = "Walter"
                        });
                });

            modelBuilder.Entity("SalonAPI.Data.CartItemDto", b =>
                {
                    b.HasOne("SalonAPI.Data.CartDto", "Cart")
                        .WithMany("Items")
                        .HasForeignKey("CartId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
